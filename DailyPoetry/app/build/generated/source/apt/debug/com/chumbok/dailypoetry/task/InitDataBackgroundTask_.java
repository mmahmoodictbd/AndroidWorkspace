//
// DO NOT EDIT THIS FILE.Generated using AndroidAnnotations 3.3.2.
//  You can create a larger work that contains this file and distribute that work under terms of your choice.
//


package com.chumbok.dailypoetry.task;

import android.content.Context;
import android.util.Log;
import com.chumbok.dailypoetry.MainActivity;
import org.androidannotations.api.BackgroundExecutor;
import org.androidannotations.api.view.OnViewChangedNotifier;

public final class InitDataBackgroundTask_
    extends InitDataBackgroundTask
{

    private Context context_;
    private static InitDataBackgroundTask_ instance_;

    private InitDataBackgroundTask_(Context context) {
        context_ = context;
    }

    public static InitDataBackgroundTask_ getInstance_(Context context) {
        if (instance_ == null) {
            OnViewChangedNotifier previousNotifier = OnViewChangedNotifier.replaceNotifier(null);
            instance_ = new InitDataBackgroundTask_(context.getApplicationContext());
            instance_.init_();
            OnViewChangedNotifier.replaceNotifier(previousNotifier);
        }
        return instance_;
    }

    private void init_() {
        context = context_;
        if (context_ instanceof MainActivity) {
            activity = ((MainActivity) context_);
        } else {
            Log.w("InitDataBackgroundTask_", (("Due to Context class "+ context_.getClass().getSimpleName())+", the @RootContext MainActivity won't be populated"));
        }
        initTask();
    }

    @Override
    public void fetchSaveFeedItemInDB() {
        BackgroundExecutor.execute(new BackgroundExecutor.Task("initDataDownloadTask", 0, "") {


            @Override
            public void execute() {
                try {
                    InitDataBackgroundTask_.super.fetchSaveFeedItemInDB();
                } catch (Throwable e) {
                    Thread.getDefaultUncaughtExceptionHandler().uncaughtException(Thread.currentThread(), e);
                }
            }

        }
        );
    }

}
