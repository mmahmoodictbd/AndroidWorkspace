//
// DO NOT EDIT THIS FILE.Generated using AndroidAnnotations 3.3.2.
//  You can create a larger work that contains this file and distribute that work under terms of your choice.
//


package com.chumbok.dailypoetry.listener;

import android.content.Context;
import android.widget.ListView;
import com.chumbok.dailypoetry.FeedItemList_;
import com.chumbok.dailypoetry.R.id;
import com.chumbok.dailypoetry.adapter.FeedListAdapter_;
import com.chumbok.dailypoetry.service.FeedService_;
import org.androidannotations.api.view.HasViews;
import org.androidannotations.api.view.OnViewChangedListener;
import org.androidannotations.api.view.OnViewChangedNotifier;

public final class EndlessScrollListener_
    extends EndlessScrollListener
    implements OnViewChangedListener
{

    private Context context_;
    private static EndlessScrollListener_ instance_;

    private EndlessScrollListener_(Context context) {
        context_ = context;
    }

    public static EndlessScrollListener_ getInstance_(Context context) {
        if (instance_ == null) {
            OnViewChangedNotifier previousNotifier = OnViewChangedNotifier.replaceNotifier(null);
            instance_ = new EndlessScrollListener_(context.getApplicationContext());
            instance_.init_();
            OnViewChangedNotifier.replaceNotifier(previousNotifier);
        }
        return instance_;
    }

    private void init_() {
        OnViewChangedNotifier.registerOnViewChangedListener(this);
        feedItemList = FeedItemList_.getInstance_(context_);
        listAdapter = FeedListAdapter_.getInstance_(context_);
        feedService = FeedService_.getInstance_(context_);
        initAdapter();
    }

    @Override
    public void onViewChanged(HasViews hasViews) {
        listView = ((ListView) hasViews.findViewById(id.listView));
    }

}
